Higher Order function : 
=====================
A function that recieves another function as an argument, that returns a new function or both
Ex. btnClose.addEventListener('click',greet)

const greet = () => console.log('Hello world')
We only have pass-by-value in JS. We dont have a pass-by-reference
---------------------------------------------------------------------------------------------------------------------
const greet  =function(greeting)
{
    return function(name)
    {
        console.log(`${greeting} ${name}`)
    }
}

const greeterHey = greet("Hey")
greeterHey("Jonas") OR
greeterHey("Hellooo")("Johnathan")
---------------------------------------------------------------------------------------------------------------------
call() : This is used to call a method that was created inside another object. 
         But now we specify through which object it should be called.

const lufthansa = {
name :'lufthansa',
iataCode:"12aa",
boobkings:[],
book(flightNum, name)
{
    console.log(`${name} has booked the flight ${iataCode} `)
    thia.boobkings.push({flight:${iataCode} ${flightNum}, name})
}
}

const euroWings = {
    name :"EuroWings",
    iataCode:"12aa",
    boobkings:[]
}

const book  = lufthansa.book()

******The call method helps in avoid duplicating the code ********
We are not repeating the book() in lufthansa object. 

Here, book() was created in the lufthansa object. But now we are specifying it should be called under which object
book.call(euroWings, 'E12312', 'Federer');
book.call(britishAirways, 'E9412', 'Nadal');
Here the 1st param refers to which object the book method should refer to.
---------------------------------------------------------------------------------------------------------------------
The apply() does the same as call() but instead of the values, it takes an array as a parameter
THE APPLY METHOD IS NOT USED ANYMORE
const flightDetails = ['A12312','Larry']
book.apply(euroWings,flightDetails)

NOT USED FREEQUENTLY
---------------------------------------------------------------------------------------------------------------------
bind() :  This method is used to assign the object to a function
The bind does not immediately call the function. It returns a new function where the "this" keyword is bound
Ex. const bookEW = book.bind(euroWings)
bookEW('F2131','Niomi')

After using the bind(), we are now able to call the bookEW() as we were calling the lufthansa.book('D1231', 'Molly');

lufthansa.planes =300
lufthansa.buyPlane = function()
{
    console.log(this)
    this.planes++
    console.log(this.planes)
}

document.querySelector('buy').addEventListener('click',lufthansa.buyPlane)

Output :
========
This will give the result of NaN. This is because "this" points to the button object on which addEventListener is called.

---------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------------------------