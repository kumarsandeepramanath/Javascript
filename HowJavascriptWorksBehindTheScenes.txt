ProtoTyping : In JS, there is a prototype Ex. Array has a prototype with a list of all properties and methods.
Then using this prototype, objects are created in JS
----------------------------------------------------------------------------------------------------------------------
First-class function : A function in which we treat functions just like variables. Ex. pass function into another function
  function closeModal() {
    modal.classList.add('hidden');
    overlay.classList.add('hidden');
  }
  close.addEventListener('click', closeModal);
----------------------------------------------------------------------------------------------------------------------
  Javascript runs on single thread and hence can perform only 1 task at a time
----------------------------------------------------------------------------------------------------------------------
  Eventloop : It takes a long running tasks, executes them in the background and puts them in the main thread once it completes
----------------------------------------------------------------------------------------------------------------------
  Every browser has a Javascript engine.
  Chrome has v8 engine which helps in running Javascript on browser
  ----------------------------------------------------------------------------------------------------------------------
  Javascript engine has 2 parts :
  1. Call Stack : Call Stack is where execution happens. It has an execution context
  2. Heap       : Heap is where objects are stored
----------------------------------------------------------------------------------------------------------------------
  Current Javascript is not an interpreted language anymore.
  It makes use of JIT - Just-In-Time compilation. Entire code is converted into machine code and executed at once
  ----------------------------------------------------------------------------------------------------------------------
  Code -> Parser(Read the code and create AST - Abstract Syntax tree) -> 
  Compilation (Takes AST and converts in machine code)-> Execution (Machine code is executed)

  Execution happens in the callstack
  The machine code is optimized and again sent to compiler and gets a more optimized machine code.
  This can happen several times and then less optimzed code is replaced with a more optimzed code
  ----------------------------------------------------------------------------------------------------------------------
  We have 3 components in a Javascript runtime :
  1. Javascript engine :  This will be used to Parse -> Compile and Execute Javascript
  2. Web APIs          :  DOM elements, Timers are part of this.
  3. Callback queue    :  Any function that needs to be executed will be present here.
                          When a function has to be executed, then the function is sent to call stack by event loop.
