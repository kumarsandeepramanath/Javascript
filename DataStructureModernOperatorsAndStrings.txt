Destructuring of array : It is a method of breaking down arrays into smaller unit
const arr1 = [2, 3, [4, 5]];
const [x, , [y, z]] = arr1;
console.log(x, y, z);
--------------------------------------------------------------------------------------------------------------
Destructuring of object : The properties in LHS should have the same name as RHS
const {name,openingHours, category} = restaurant

O/p : will have the name, openingHours object and the category array

The order will not matter but the name present in the object has to be the same
If we have to rename the properties, it can be done as below :

const {name:restaurantName, openingHours :hours,category:restaurantCategory} = restaurant 
--------------------------------------------------------------------------------------------------------------
Destructuring of Nested Object

const {sat} = openingHours;
console.log(sat);

o/p : {open: 0, close: 24}


const {sat: { open, close }} = openingHours;
console.log(open, close);

o/p : 7,14
--------------------------------------------------------------------------------------------------------------
Spread Operator : Add elements to an array
const arr = [7, 8, 9];
const newArr = [1,2,3, ...arr];
console.log(newArr); // [1,2,3,7,8,9]

Spread operator helps in getting the elements of the array individually
Ex. myArr = [1,2,3,4,5]
console.log(myArr) o/p => [1,2,3,4,5]
console.log(...myArr) o/p => 1,2,3,4,5

--------------------------------------------------------------------------------------------------------------
Spread Operator can be used for "MERGING ARRAY" AND "CREATING SHALLOW COPIES"
const mainMenuCopy = [...restaurant.mainMenu];
console.log(mainMenuCopy);


// Join 2 or more arrays

const arr3 = [1, 2, 3];
const arr4 = [4, 5, 6];
const newJoinedArr = [...arr3, ...arr4];
console.log(newJoinedArr);
--------------------------------------------------------------------------------------------------------------
Iterables are arrays, strings, maps and NOT Objects
With SPREAD operator, we can make copies of the Objects
const restaurantCopy = {...restaurant}
restaurantCopy.name = 'Fresh name'
console.log(restaurantCopy.name) // Fresh name
console.log(restaurantCopy.name) // Old name
--------------------------------------------------------------------------------------------------------------
Spread : It is used to unpack elements from an array . It is present on ehe RIGHT side of =
Rest   : It is use to pack elements into an array. It does the opposite of SPREAD.  It is present on the LEFT side of =. REST should be the last ement on the left of the = operator

--------------------------------------------------------------------------------------------------------------
// Rest is the opposite of Spread operator
const myArray1 = [1, 2, 3, 4, 5];
const [g, h, ...others] = myArray1;

console.log(g, h, others); o/p => 1,2,[3,4,5]
--------------------------------------------------------------------------------------------------------------
///Function with variable number of arguments
function add(...numbers) {
  console.log(numbers);
}

add(1, 2);
add(1, 2, 3, 4);
add(1, 2, 3, 4, 5, 6, 7, 8, 9);
--------------------------------------------------------------------------------------------------------------
Short-circuiting:
console.log(undefined || 0 || '' || 'Hello' || 23);
//o/p => Hello , since it is the first truthy value
--------------------------------------------------------------------------------------------------------------
//Nullish:  null and undefined
restaurant.guessNum = 0;
const guessCorrect = restaurant.guessNum ?? 10;
console.log(guessCorrect); o/p =>0 since there is a ?? operator
--------------------------------------------------------------------------------------------------------------
Mini Project on DS4